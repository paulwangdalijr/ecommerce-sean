{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/social/social.component.css","webpack:///./src/app/components/social/social.component.html","webpack:///./src/app/components/social/social.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/product.module/models/product.ts","webpack:///./src/app/product.module/services/product.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./product.module/product.module\": [\n\t\t\"./src/app/product.module/product.module.ts\",\n\t\t\"product-module-product-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SocialComponent } from './components/social/social.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AdminComponent } from './components/admin/admin.component';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\n\n//test\nconst routes: Routes = [\n  // { path: '', \n  // \tcomponent: HomeComponent, \n  // \tchildren: [\n  // \t\t{ path: '', loadChildren: './product/product.module#ProductModule' }\n  // \t]\n  // },\n  // { path: '', component: HomeComponent },\n\n  { path: '', loadChildren: './product.module/product.module#ProductModule' },\n  { path: 'about', component: AboutComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'social/:token', component: SocialComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent },\n  { path: '**', loadChildren: './product.module/product.module#ProductModule' }\n  \n  // { path: 'products', loadChildren: './products/products.module#ProductsModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { SocialComponent } from './components/social/social.component';\r\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ProfileComponent,\r\n    SocialComponent,\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table{\\r\\n\\twidth: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalProduct\\\">Add Product</button>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-lg-12\\\">\\n\\t\\t\\t<table>\\n\\t\\t\\t  <thead>\\n\\t\\t\\t    <tr>\\n\\t\\t\\t      <th scope=\\\"col\\\">Name</th>\\n\\t\\t\\t      <th scope=\\\"col\\\">Description</th>\\n\\t\\t\\t      <th scope=\\\"col\\\">Categories</th>\\n\\t\\t\\t      <th scope=\\\"col\\\">Quantity</th>\\n\\t\\t\\t      <th scope=\\\"col\\\">Price</th>\\n\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"text-lg-right\\\">Actions</th>\\n\\t\\t\\t    </tr>\\n\\t\\t\\t  </thead>\\n\\t\\t\\t  <tbody>\\n\\t\\t\\t  \\t<tr *ngFor=\\\"let product of products; \\n\\t\\t\\t             let isOdd=odd;\\n\\t\\t\\t             let isEven=even\\\" \\n\\t\\t\\t\\t      [class.table-dark]=\\\"isOdd\\\" \\n\\t\\t\\t\\t      [class.table-light]=\\\"isEven\\\">\\n\\t\\t\\t\\t      <td>{{product.name}}</td>\\n\\t\\t\\t\\t      <td>{{product.description}}</td>\\n\\t\\t\\t\\t      <td></td>\\n\\t\\t\\t\\t      <td>{{product.quantity}}</td>\\n\\t\\t\\t\\t      <td>{{product.price}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t  <button class=\\\"btn btn-primary float-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalProduct\\\">Edit</button>\\n\\t\\t\\t\\t      \\t  <button class=\\\"btn btn-info float-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalProduct\\\">Details</button>\\n\\t\\t\\t\\t      \\t  <button class=\\\"btn btn-danger float-right\\\">Delete</button>\\n\\t\\t\\t\\t      \\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t  </tbody>\\n\\t\\t\\t</table> \\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"modalProduct\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form>\\t\\n\\t      <div class=\\\"modal-header\\\">      \\t\\n\\t        <input type=\\\"text\\\" class=\\\"modal-title\\\" value=\\\"test title\\\"/>\\n\\t        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t          <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t        </button>\\n\\t      </div>\\n\\t      <div class=\\\"modal-body\\\">\\n\\t        <div class=\\\"container\\\">\\n\\t          <div class=\\\"row\\\">\\n\\t            <div class=\\\"col-sm\\\">\\n\\t              <img alt='test' src=\\\"http://www.paperairplanebehavioral.com/wp-content/uploads/2015/07/Airplane.png\\\"/>\\n\\t            </div>\\n\\t            <div class=\\\"col-sm\\\">\\n\\t              <textarea> descript ion </textarea>\\n\\t              <ul>\\n\\t                <!-- <li *ngFor=\\\"let prop of Object.getOwnPropertyNames(product.property)\\\"><strong>prop</strong></li> -->\\n\\t                <!-- <li>{{Object.getOwnPropertyNames(SelectedProduct)}}</li> -->\\n\\t                <li *ngFor=\\\"let prop of SelectedProperty\\\"><strong>{{prop}}: </strong>{{SelectedProduct.property[prop]}}</li>\\n\\t              </ul>\\n\\t            </div>\\n\\t          </div>\\n\\t        </div>\\n\\t      </div>\\n\\t     </form>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primar\\\" data-dismiss=\\\"modal\\\">Ok</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { ProductService } from '../../product.module/services/product.service';\nimport { Product } from '../../product.module/models/product';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  products;\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate productService: ProductService,\n    private router: Router) { }\n\n  ngOnInit() {\n  \t// this.authService.getAdminProfile().subscribe((profile:any) => {\n   //    if(profile.success){\n   //      // this.email = profile.user.username;\n   //      this.getAllProducts();\n   //    }else{\n   //      this.router.navigate(['/profile']);\n   //    }\n   //  })\n   this.getAllProducts();\n\n  }\n\n  getAllProducts(){\n    this.products = [];\n    this.productService.getAllProducts().subscribe((data:any)=>{\n      data.rows.forEach(element => {\n        let ProductItem = new Product();\n        ProductItem.id = element.ID;\n        ProductItem.description = element.description;\n        ProductItem.name = element.name;\n        ProductItem.price = element.price;\n        ProductItem.quantity = element.quantity;\n        ProductItem.property = JSON.parse(element.property);\n        this.products.push(ProductItem);\n      });\n      // this.Products=data.rows;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  \t\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n  <!-- Custom Success/Error Message -->\\n  <div class=\\\"show-hide-message\\\">\\n    <div [ngClass]=\\\"messageClass\\\">\\n      {{ message }}\\n    </div>\\n  </div>\\n\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-3\\\"></div>\\n  <div class=\\\"col-6\\\">\\n    \\n  <h2 class=\\\"page-header\\\">Login</h2>\\n  <!-- Login Form -->\\n  <form [formGroup]=\\\"form\\\"  (submit)=\\\"onLoginSubmit()\\\">\\n\\n    <!-- email Field -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <div [ngClass]=\\\"{'has-error': form.controls.email.errors && form.controls.email.dirty, 'has-success': form.controls.email.valid && form.controls.email.dirty }\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"email\\\" formControlName=\\\"email\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required.</li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <!-- Password Field  -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n        <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\n        </ul>\\n      </div>\\n    </div>\\n    <!-- Submit Button -->\\n    <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\n    <a href=\\\"/auth/facebook\\\" ><button type=\\\"button\\\" class=\\\"btn btn-info\\\">Facebook</button></a>\\n  </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n  \tthis.createForm();\n  }\n\n  createForm(){\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onLoginSubmit(){\n    this.form.disable();\n    const form = {\n      username: this.form.get(\"email\").value,\n      password: this.form.get(\"password\").value\n    };\n   this.authService.login(form).subscribe((data:any)=>{\n     if(!data.success){\n       this.form.enable();\n     }else{\n       this.authService.storeUserToken(data.token);\n       this.authService.storeUseremail(data.user.username);\n       setTimeout(()=>{\n         if(data.user.type !== 'admin'){\n           this.router.navigate(['']);\n         }else{\n           this.router.navigate(['/admin']);\n         }\n       },1000);\n     }\n   });\n  }\n\n}\n","module.exports = \".account-button{\\r\\n\\tfont-size: 30px;\\r\\n\\tmargin-right: 15px;\\r\\n}\\r\\n.account-button i{\\r\\n\\tfont-size: 30px;\\r\\n\\tmargin-right: 15px;\\r\\n}\\r\\n.account-button:hover{\\r\\n\\tcursor: pointer;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Shopping!</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>      \\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"about\\\">About</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <div class=\\\"btn-group show\\\" role=\\\"group\\\">\\n        <div class=\\\"account-button dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n           <i class=\\\"fas fa-user\\\"></i>\\n        </div>\\n        <div class=\\\"dropdown-menu\\\" x-placement=\\\"bottom-start\\\" style=\\\"position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 48px, 0px);\\\">\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"login\\\">Login</a>\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"signup\\\">Sign Up</a>\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"profile\\\">Profile</a>\\n          <a *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"onLogoutClick()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"logout\\\">Logout</a>\\n        </div>\\n      </div>\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <!-- <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button> -->\\n    </form>\\n  </div>\\n</nav>\\n\\n<ol class=\\\"breadcrumb\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a href=\\\"#\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item\\\"><a href=\\\"#\\\">Library</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Data</li>\\n</ol>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n  \tpublic authService: AuthService,\n  \tprivate router: Router\n  \t) { }\n\n  ngOnInit() {\n  }\n  onLogoutClick(){\n  \tthis.authService.logout();\n  \tthis.router.navigate(['']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  \n  email;\n  constructor(\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n  \tthis.authService.getProfile().subscribe((profile:any) => {\n      if(profile.success){\n        this.email = profile.user.username;\n      }else{\n        this.authService.logout();\n        this.router.navigate(['/login']);\n      }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div class='show-hide-message'>\\n  <div [ngClass]='messageClass'>\\n    {{message}}\\n  </div>\\n</div>\\n\\n<!-- Registration Form -->\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-3\\\"></div>\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<h1 class=\\\"page-header\\\">Signup</h1>\\n\\t\\t<form id=\\\"registerForm\\\" [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">  \\n\\t\\t  \\n\\t\\t  <!-- Email Input -->\\n\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t    <label for=\\\"email\\\">Email</label>\\n\\t\\t    <!-- <div [ngClass]=\\\"{'has-danger': form.controls.email.dirty && (form.controls.email.errors || !emailValid ), 'has-success': !form.controls.email.errors && emailValid}\\\"> -->\\n\\t\\t      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" \\n\\t\\t      [ngClass]=\\\"{'is-invalid': form.controls.email.dirty && (form.controls.email.errors || !emailValid ), 'is-valid': !form.controls.email.errors && emailValid}\\\"\\n\\t\\t      />\\n\\t\\t      <!-- Validation -->\\n\\t\\t      \\n\\t\\t      <ul class=\\\"help-block\\\"\\n\\t\\t      [ngClass]=\\\"{'invalid-feedback': form.controls.email.dirty && (form.controls.email.errors || !emailValid ), 'valid-feedback': !form.controls.email.errors && emailValid}\\\"\\n\\t\\t      >\\n\\t\\t        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n\\t\\t        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n\\t\\t        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n\\t\\t        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage }}</li>\\n\\t\\t      </ul>\\n\\t\\t    <!-- </div> -->\\n\\t\\t  </div>\\n\\n\\t\\t  <!-- Password Input -->\\n\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t    <label for=\\\"password\\\">Password</label>\\n\\t\\t    <!-- <div [ngClass]=\\\"{'has-danger': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\"> -->\\n\\t\\t      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" \\n\\t\\t      [ngClass]=\\\"{'is-invalid': (form.controls.password.errors && form.controls.password.dirty), 'is-valid': !form.controls.password.errors}\\\"\\n\\t\\t      />\\n\\t\\t      <!-- Validation -->\\n\\t\\t      <ul class=\\\"help-block\\\"\\n\\t\\t      [ngClass]=\\\"{'invalid-feedback': (form.controls.password.errors && form.controls.password.dirty), 'valid-feedback': !form.controls.password.errors}\\\"\\n\\t\\t      >\\n\\t\\t        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\n\\t\\t        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Password must be at least 8 characters but no more than 35</li>\\n\\t\\t        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must have 1 uppercase character, 1 lowercase character, 1 special character and 1 number</li>\\n\\t\\t      </ul>\\n\\t\\t    <!-- </div> -->\\n\\t\\t  </div>\\n\\n\\t\\t  <!-- Confirm Password Input -->\\n\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t    <label for=\\\"confirm\\\">Confirm Password</label>\\n\\t\\t    <!-- <div [ngClass]=\\\"{'has-danger': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"> -->\\n\\t\\t      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" \\n\\t\\t      [ngClass]=\\\"{'is-invalid': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'is-valid': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"\\n\\t\\t      />\\n\\t\\t      <!-- Validation -->\\n\\t\\t      <ul class=\\\"help-block\\\"\\n\\t\\t      [ngClass]=\\\"{'invalid-feedback': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'valid-feedback': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"\\n\\t\\t      >\\n\\t\\t        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n\\t\\t        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n\\t\\t      </ul>\\n\\t\\t    <!-- </div> -->\\n\\t\\t  </div>\\n\\n\\t\\t  <!-- Submit Input -->\\n\\t\\t  <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n\\t\\t</form>\\n\\t\\t<!-- Registration Form /-->\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router'; \n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n                private authService: AuthService,\n                private formBuilder: FormBuilder,\n                private router: Router\n             ){ \n    this.createForm()\n  }\n\n  createForm(){\n    this.form = this.formBuilder.group({\n      // Field validators, this will update the form.controls.[control name].errors/valid in the HTML\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n        this.validateEmail\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(35),\n        this.validatePassword\n      ])],\n      confirm: ['', Validators.required]\n    }, \n    //Form validator, this will update the form.valid/form.errors in the HTML\n    { \n      validator: this.matchingPasswords('password', 'confirm') \n    })\n  }  \n\n  ngOnInit() {\n  }\n\n  // Validators\n  validateEmail(controls){\n    const regExp = new RegExp(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/\n    );\n\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validateEmail': true }\n    }\n\n  }\n  validatePassword(controls){\n    const regExp = new RegExp(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,35})/\n    );\n\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validatePassword': true }\n    }\n\n  }\n  matchingPasswords(password, confirm){\n    return(group:FormGroup) => {\n      if(group.controls[password].value === group.controls[confirm].value){\n        return null;\n      }else{\n        return { 'matchingPasswords': true }\n      }\n    }\n  } \n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  social works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthGuard } from '../../guards/auth.guard';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service'; \n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n})\nexport class SocialComponent implements OnInit {\n\n  constructor(\n    private authGuard: AuthGuard,\n  \tprivate authService: AuthService,\n  \tprivate route: ActivatedRoute,\n  \tprivate router: Router) \n  {\n  \t// this.authService.storeUserData(data.token, data.user);\n  \t// console.log(route.snapshot.url);\n  \tthis.authService.storeUserToken(route.snapshot.params['token']);\n\n  \tthis.authService.getProfile().subscribe((data:any) => {\n      if(data.success){\n        this.authService.storeUseremail(data.user);\n        this.router.navigate(['']);\n      }else{\n        this.authService.logout();\n        this.router.navigate(['/login']);\n      }\n    })\n  \t// this.authService.storeUserData(route.snapshot.params['token'], '');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  redirectURL;\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  \t){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n  \t\n  \tthis.redirectURL = state.url;\n  \tif(this.authService.loggedIn()){\n  \t\treturn true;\n  \t}else{\n  \t\tthis.router.navigate(['/login']);\n  \t\treturn false;\n  \t}\n  }\n}\n","export class Product {\r\n    id?: number;\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    quantity: number;\r\n    property: {};\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  domain = 'http://localhost:3000'; //dev\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAllProducts(){\r\n    return this.http.get(this.domain + '/api/product/getProducts' ); \r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  authToken;\n  authEmail;\n  jwtHelper;\n  options;\n\n  domain = 'http://localhost:3000'; //dev\n\n  constructor(\n  \tprivate http: HttpClient\n  \t) { \n\n  \tthis.jwtHelper = new JwtHelperService()\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('x-auth-token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    // return tokenNotExpired();'\n    // console.log(this.authToken);\n    let x = true;\n    this.loadToken();\n    try{\n      x = this.jwtHelper.isTokenExpired(this.authToken);\n    }catch(e){\n      x = true;\n      this.logout();\n    }\n    // console.log(x);\n    // return !this.jwtHelper.isTokenExpired(this.authToken);\n    return !x;\n  }\n  storeUserToken(token){\n    localStorage.setItem('x-auth-token', token);\n    this.authToken = token;\n  }\n  storeUseremail(email){  \t\n    localStorage.setItem('email', email);\n    this.authEmail = email;\n  }\n\n  getProfile(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + \"/auth/profile\", this.options);\n  }  \n\n  getAdminProfile(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + \"/auth/adminprofile\", this.options);\n  }\n\n  createAuthenticationHeaders(){\n    this.loadToken();\n    this.options = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-auth-token': this.authToken\n      })\n    }\n  }\n\n  logout(){\n    this.authToken = null;\n    this.authEmail = null;\n    localStorage.clear();\n  }\n\n  login(form){\n    return this.http.post(this.domain + '/auth/login', form);   \n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}