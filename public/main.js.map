{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/social/social.component.css","webpack:///./src/app/components/social/social.component.html","webpack:///./src/app/components/social/social.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/shared-form/detailsform.service.ts","webpack:///./src/app/shared-form/detailsform/detailsform.component.css","webpack:///./src/app/shared-form/detailsform/detailsform.component.html","webpack:///./src/app/shared-form/detailsform/detailsform.component.ts","webpack:///./src/app/shared-form/shared-form.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin.module/admin.module\": [\n\t\t\"./src/app/admin.module/admin.module.ts\",\n\t\t\"common\",\n\t\t\"admin-module-admin-module\"\n\t],\n\t\"./product.module/product.module\": [\n\t\t\"./src/app/product.module/product.module.ts\",\n\t\t\"common\",\n\t\t\"product-module-product-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SocialComponent } from './components/social/social.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\n\n//test\nconst routes: Routes = [\n  // { path: '', \n  // \tcomponent: HomeComponent, \n  // \tchildren: [\n  // \t\t{ path: '', loadChildren: './product/product.module#ProductModule' }\n  // \t]\n  // },\n  // { path: '', component: HomeComponent },\n\n\n  // { path: 'admin', component: AdminComponent, canActivate: [AdminGuard] },\n\n  { path: '', loadChildren: './product.module/product.module#ProductModule' },\n  { path: 'about', component: AboutComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'social/:token', component: SocialComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'admin', loadChildren: './admin.module/admin.module#AdminModule', canActivate: [AdminGuard] },\n  { path: '**', loadChildren: './product.module/product.module#ProductModule' }\n  \n  // { path: 'products', loadChildren: './products/products.module#ProductsModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedFormModule} from './shared-form/shared-form.module'\n\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SocialComponent } from './components/social/social.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    AboutComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    SocialComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    SharedFormModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-4 lead\\\">\\n  <p>This is a demo app developed by <a href=\\\"mailto:paulwangdalijr@gmail.com\\\"><span class=\\\"text-primary\\\">Paul Wangdali Jr.</span></a></p>\\n  <p>Due to his boredom and wanting to try new things, he developed this awesome E-commerce website using the following technologies:</p>  \\n  <p>Angular 6, Node.js, Express.js, SQLite, Bootstrap 4 using Bootswatch Lux Theme and utilizing some of the NPM packages to rapidly develop this wonderful website :)</p>\\n  <p>Some of the functionalities are yet to be implemented!!!</p>\\n  <p></p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor(\n  \tprivate authService: AuthService\n\n  \t) { }\n\n  ngOnInit() {\n  \t// console.log(this.authService.testing);\n  \t\n  \tconsole.log(this.authService.testing);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  \t\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n  \\n  <!-- Custom Success/Error Message -->\\n  <div class=\\\"show-hide-message text-center\\\">\\n    <div [ngClass]=\\\"messageClass\\\">\\n      {{ message }}\\n    </div>\\n  </div>\\n\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-3\\\"></div>\\n  <div class=\\\"col-6\\\">\\n    \\n  <h1 class=\\\"page-header\\\">Login</h1>\\n  <!-- Login Form -->\\n  <form [formGroup]=\\\"form\\\"  (submit)=\\\"onLoginSubmit()\\\">\\n\\n    <!-- email Field -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <div [ngClass]=\\\"{'has-error': form.controls.email.errors && form.controls.email.dirty, 'has-success': form.controls.email.valid && form.controls.email.dirty }\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"email\\\" formControlName=\\\"email\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required.</li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <!-- Password Field  -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n        <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\n        <!-- Validation -->\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\n        </ul>\\n      </div>\\n    </div>\\n    <!-- Submit Button -->\\n    <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\n    <a href=\\\"/auth/facebook\\\" ><button type=\\\"button\\\" class=\\\"btn btn-info float-right\\\">Facebook</button></a>\\n  </form>\\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  messageClass;\n  message;\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n  \tthis.createForm();\n    this.authService.testing = \"testing!!!!\";\n    console.log(\"testing set!\")\n  }\n\n  createForm(){\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onLoginSubmit(){\n    this.form.disable();\n    const form = {\n      username: this.form.get(\"email\").value,\n      password: this.form.get(\"password\").value\n    };\n   this.authService.login(form).subscribe((data:any)=>{\n     if(!data.success){\n       this.messageClass = 'alert alert-danger';\n       this.message = data.message;\n       this.form.enable();  \n       setTimeout(()=>{\n        this.message=\"\";\n        this.messageClass = '';\n        \n        },2000);\n     }else{\n        this.messageClass = 'alert alert-success';\n        this.message = \"Login successful\";\n       this.authService.storeUserToken(data.token);\n       this.authService.storeUseremail(data.user.username);\n       localStorage.setItem('type', data.user.type);\n       sessionStorage.clear();\n       setTimeout(()=>{            \n         if(data.user.type !== 'admin'){\n           this.router.navigate(['']);\n         }else{\n           this.router.navigate(['/admin']);\n         }\n         this.message=\"\";     \n         this.messageClass = '';\n       },2000);\n     }\n   });\n  }\n\n}\n","module.exports = \".account-button{\\n\\tfont-size: 30px;\\n\\tmargin-right: 15px;\\n}\\n.account-button i{\\n\\tfont-size: 30px;\\n\\tmargin-right: 15px;\\n}\\n.account-button:hover{\\n\\tcursor: pointer;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Shopping!</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>      \\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"about\\\">About</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <div class=\\\"btn-group show\\\" role=\\\"group\\\">\\n        <div class=\\\"account-button dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n           <i class=\\\"fas fa-user\\\"></i>\\n        </div>\\n        <div class=\\\"dropdown-menu\\\" x-placement=\\\"bottom-start\\\" style=\\\"position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 48px, 0px);\\\">\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"login\\\">Login</a>\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"signup\\\">Sign Up</a>\\n          <a *ngIf=\\\"authService.loggedIn() && !authService.isAdmin() \\\" class=\\\"dropdown-item\\\" routerLink=\\\"profile\\\">Profile</a>\\n          <a *ngIf=\\\"authService.isAdmin()\\\" class=\\\"dropdown-item\\\" routerLink=\\\"admin\\\">Dashboard</a>\\n          <a *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"onLogoutClick()\\\" class=\\\"dropdown-item\\\">Logout</a>\\n        </div>\\n      </div>\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <!-- <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button> -->\\n    </form>\\n  </div>\\n</nav>\\n\\n<div *ngIf=\\\"loggingOut\\\" class=\\\"text-center\\\">\\n  <h5>Logging out...</h5>\\n  <div class=\\\"progress\\\">\\n    <div class=\\\"progress-bar progress-bar-striped progress-bar-animated bg-success\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"75\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 100%\\\"></div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  loggingOut;\n  constructor(\n  \tpublic authService: AuthService,\n  \tprivate router: Router\n  \t) { }\n\n  ngOnInit() {\n  }\n  \n  onLogoutClick(){\n    this.loggingOut = true;\n    setTimeout(()=>{\n      this.authService.logout();\n      this.router.navigate(['']);\n      this.loggingOut = false;\n    },2000);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-4\\\"> \\n  \\n<!-- Custom Success/Error Message -->\\n    <div class=\\\"show-hide-message text-center\\\">\\n        <div [ngClass]=\\\"messageClass\\\">\\n        {{ message }}\\n        </div>\\n    </div>\\n    <p class=\\\"text-primary text-center\\\">Please update your profile, these details will be used during checkout.</p>\\n    <app-detailsform></app-detailsform>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { DetailsformService } from '../../shared-form/detailsform.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit{\n  messageClass;\n  message;\n  input;\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private detailsFormService: DetailsformService\n    ) { \n  }\n  \n  ngOnInit() {\n    this.detailsFormService.goBackLink = \"\";    \n    this.detailsFormService.operation = \"Update\";\n    this.detailsFormService.emailFlag = true;\n    this.detailsFormService.detailsFlag = false;\n    // this.detailsFormService.onClick = (x)=>{this.click(x)};\n    this.detailsFormService.onClick = ()=>{ this.click() };\n    // this.detailsFormService.onClick = this.click;\n    \n  \t// this.authService.getProfileDetails().subscribe((profile:any) => {\n    //   if(profile.success){\n    //     this.detailsFormService.email = this.authService.profile.user.email;\n    //     this.detailsFormService.name = this.authService.profile.profile.user.name;\n    //     this.detailsFormService.address = this.authService.profile.user.address;\n    //     this.detailsFormService.mobile = this.authService.profile.user.mobile;\n    //   }\n    //   else{\n    //     if(localStorage.getItem('type') !== 'admin'){\n    //       this.authService.logout();\n    //       this.router.navigate(['']);\n    //     }else{\n    //       this.router.navigate(['admin']);          \n    //     }\n    //   }  \n      this.detailsFormService.email = this.authService.profile.email;\n      this.detailsFormService.name = this.authService.profile.name;\n      this.detailsFormService.address = this.authService.profile.address;\n      this.detailsFormService.mobile = this.authService.profile.mobile;\n    // })\n  }\n  click(){\n    let user = { name: this.detailsFormService.name, address: this.detailsFormService.address, mobile: this.detailsFormService.mobile };\n    this.authService.editProfile(user).subscribe((data:any)=>{\n      if(data.success){\n        this.messageClass = \"alert alert-success\";\n        this.message = data.message;      \n      }else{\n        this.messageClass = \"alert alert-danger\";\n        this.message = data.message;\n      }\n      setTimeout(()=>{\n        this.messageClass = \"\";\n        this.message = \"\";\n      }, 2000);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n\\n\\t<div class='show-hide-message text-center'>\\n\\t\\t<div [ngClass]='messageClass'>\\n\\t\\t\\t{{message}}\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Registration Form -->\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-3\\\"></div>\\n\\t\\t<div class=\\\"col-6\\\">\\n\\t\\t\\t<h1 class=\\\"page-header\\\">Signup</h1>\\n\\t\\t\\t<form id=\\\"registerForm\\\" [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">  \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Email Input -->\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t\\t<!-- <div [ngClass]=\\\"{'has-danger': form.controls.email.dirty && (form.controls.email.errors || !emailValid ), 'has-success': !form.controls.email.errors && emailValid}\\\"> -->\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" \\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': form.controls.email.dirty && (form.controls.email.errors || !emailValid ), 'is-valid': !form.controls.email.errors && emailValid}\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<!-- Validation -->\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"help-block\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'invalid-feedback': form.controls.email.dirty && (form.controls.email.errors || !emailValid ), 'valid-feedback': !form.controls.email.errors && emailValid}\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"emailMessage\\\">{{ emailMessage }}</li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t<!-- </div> -->\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Password Input -->\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t<!-- <div [ngClass]=\\\"{'has-danger': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\"> -->\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" \\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': (form.controls.password.errors && form.controls.password.dirty), 'is-valid': !form.controls.password.errors}\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<!-- Validation -->\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"help-block\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'invalid-feedback': (form.controls.password.errors && form.controls.password.dirty), 'valid-feedback': !form.controls.password.errors}\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Password must be at least 8 characters but no more than 35</li>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must have 1 uppercase character, 1 lowercase character, 1 special character and 1 number</li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t<!-- </div> -->\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Confirm Password Input -->\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"confirm\\\">Confirm Password</label>\\n\\t\\t\\t\\t\\t<!-- <div [ngClass]=\\\"{'has-danger': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"> -->\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" \\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'is-valid': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<!-- Validation -->\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"help-block\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'invalid-feedback': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'valid-feedback': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t<!-- </div> -->\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Submit Input -->\\n\\t\\t\\t\\t<input [disabled]=\\\"!form.valid || !emailValid || processing\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n\\t\\t\\t</form>\\n\\t\\t\\t<!-- Registration Form /-->\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"footer-info\\\">\\n\\t\\t<br><br>\\n\\t\\t<p class=\\\"text-right col-form-label-sm\\\">Reactive Form was used here, you can't pass the front end validation :P</p>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router'; \n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form: FormGroup;\n  message;\n  messageClass;\n  emailValid;\n  processing;\n\n  constructor(\n                private authService: AuthService,\n                private formBuilder: FormBuilder,\n                private router: Router\n             ){ \n    this.createForm()\n  }\n\n  createForm(){\n    this.form = this.formBuilder.group({\n      // Field validators, this will update the form.controls.[control name].errors/valid in the HTML\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n        this.validateEmail\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(35),\n        this.validatePassword\n      ])],\n      confirm: ['', Validators.required]\n    }, \n    //Form validator, this will update the form.valid/form.errors in the HTML\n    { \n      validator: this.matchingPasswords('password', 'confirm') \n    })\n  }  \n\n  ngOnInit() {\n  }\n\n  checkEmail(){\n    this.processing = true;\n    if(!this.form.get('email').errors){\n      this.authService.checkEmail(this.form.get(\"email\").value).subscribe((data:any)=>{\n        if(data.success){\n          this.messageClass = 'alert alert-success';\n          this.emailValid = true;\n        }else{\n          this.messageClass = 'alert alert-danger';\n          this.emailValid = false;          \n        }\n        this.message = data.message;    \n        this.processing = false;          \n      });\n    }\n    console.log(this.form.get('email').errors);\n    console.log(this.emailValid);\n  }\n\n  onRegisterSubmit(){\n    this.processing = true;    \n    this.form.disable;\n    const user = {\n      email: this.form.get('email').value,\n      password: this.form.get('password').value\n    }\n    this.authService.registerUser(user).subscribe( (data:any) => {\n      if( !data.success ){\n        this.message = data.message;\n        this.messageClass = 'alert alert-danger';\n        this.processing = false;    \n        this.form.enable;                    \n      }else{\n        this.messageClass = 'alert alert-success';\n        this.message = data.message + \". Redirecting...\";\n        setTimeout( () => {\n          this.router.navigate(['/login']);\n        }, 2000)\n      }\n      \n    });\n  }\n\n  // Validators\n  validateEmail(controls){\n    const regExp = new RegExp(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/\n    );\n\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validateEmail': true }\n    }\n\n  }\n  validatePassword(controls){\n    const regExp = new RegExp(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,35})/\n    );\n\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validatePassword': true }\n    }\n\n  }\n  matchingPasswords(password, confirm){\n    return(group:FormGroup) => {\n      if(group.controls[password].value === group.controls[confirm].value){\n        return null;\n      }else{\n        return { 'matchingPasswords': true }\n      }\n    }\n  } \n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  social works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthGuard } from '../../guards/auth.guard';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service'; \n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n})\nexport class SocialComponent implements OnInit {\n\n  constructor(\n    private authGuard: AuthGuard,\n  \tprivate authService: AuthService,\n  \tprivate route: ActivatedRoute,\n  \tprivate router: Router) \n  {\n  \t// this.authService.storeUserData(data.token, data.user);\n  \t// console.log(route.snapshot.url);\n  \tthis.authService.storeUserToken(route.snapshot.params['token']);\n\n  \tthis.authService.getProfile().subscribe((data:any) => {\n      if(data.success){\n        this.authService.storeUseremail(data.user);\n        this.router.navigate(['']);\n         sessionStorage.clear();\n      }else{\n        this.authService.logout();\n        this.router.navigate(['/login']);\n      }\n    })\n  \t// this.authService.storeUserData(route.snapshot.params['token'], '');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service'; \nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  redirectURL;\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  \t){\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {   \t\n\n   \tthis.redirectURL = state.url;\n  \tif(this.authService.loggedIn()){\n  \t\treturn this.authService.getAdminProfile().pipe(\n        map((data:any)=>{\n    \t\t\tif(data.success){\n    \t\t\t\treturn true;\n    \t\t\t}else{\n    \t\t\t\tthis.router.navigate(['/profile']);\n    \t\t\t\treturn false;\n          }\n  \t\t\t})\n      );\n  \t}else{\n  \t\tthis.router.navigate(['/login']);\n  \t\treturn false;\n  \t}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service'; \nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  redirectURL;\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  \t){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n  \t\n  \tthis.redirectURL = state.url;\n\n  \tif(this.authService.loggedIn()){\n      return this.authService.getProfileDetails().pipe(\n        map((data:any)=>{\n          if(data.success){\n            if(data.type === 'admin'){\n              this.router.navigate(['/admin']);              \n              return false;              \n            }else{\n              this.authService.profile = data.user;\n              return true;\n            }\n          }else{\n            this.authService.logout();\n            this.router.navigate(['/login']);\n            return false;\n          }\n        })\n      );\n      // if(localStorage.getItem('type') === 'admin'){\n      //   this.router.navigate(['/admin']);\n      //   return false;\n      // }else{\n  \t\t//   return true;\n      // }\n  \t}else{\n  \t\tthis.router.navigate(['/login']);\n  \t\treturn false;\n  \t}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  authToken;\n  authEmail;\n  userType;\n  jwtHelper;\n  options;\n  testing;\n  profile;\n\n  domain = 'http://localhost:3000'; //dev\n\n  constructor(\n  \tprivate http: HttpClient\n  \t) { \n\n  \tthis.jwtHelper = new JwtHelperService()\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('x-auth-token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    // return tokenNotExpired();'\n    // console.log(this.authToken);\n    let x = true;\n    this.loadToken();\n    try{\n      x = this.jwtHelper.isTokenExpired(this.authToken);\n    }catch(e){\n      x = true;\n      this.logout();\n    }\n    // console.log(x);\n    // return !this.jwtHelper.isTokenExpired(this.authToken);\n    return !x;\n  }\n\n  checkEmail(email){\n    return this.http.get(this.domain + \"/auth/checkEmail/\" + email);\n  }\n  registerUser(user){\n    return this.http.post(this.domain + '/auth/register', user);        \n\n  }\n  storeUserToken(token){\n    localStorage.setItem('x-auth-token', token);\n    this.authToken = token;\n  }\n  storeUseremail(email){  \t\n    localStorage.setItem('email', email);\n    this.authEmail = email;\n  }\n\n  getProfile(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + \"/auth/profile\", this.options).pipe(\n      map((data:any)=>{\n        if(data.success){\n          this.authEmail = data.user.username;\n        }\n        return data;\n      }));      \n  }  \n  getProfileDetails(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + \"/auth/profileDetails\", this.options);\n  }  \n\n  editProfile(user){\n    this.createAuthenticationHeaders();    \n    return this.http.put(this.domain + '/auth/profileUpdate', user, this.options ); \n  }\n\n  getAdminProfile(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + \"/auth/adminprofile\", this.options);\n    // return this.http.get(this.domain + \"/auth/adminprofile\", this.options).\n    //   pipe(\n    //     map((data:any)=>{\n    //       return data.success;\n    //     }));\n  }\n  createOrder(items){\n    this.createAuthenticationHeaders();   \n    console.log(items); \n    return this.http.post(this.domain + '/auth/createOrder', items, this.options);\n  }\n  createOrderNotLoggedIn(i_user, i_items){\n    let params = {\n      user: i_user,\n      items: i_items,\n    }\n    return this.http.post(this.domain + '/auth/createOrderNoAuth', params);\n  }\n  createAuthenticationHeaders(){\n    this.loadToken();\n    this.options = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'x-auth-token': this.authToken\n      })\n    }\n  }\n\n  logout(){\n    this.authToken = null;\n    this.authEmail = null;\n    localStorage.clear();\n  }\n\n  login(form){\n    return this.http.post(this.domain + '/auth/login', form).pipe(\n      map((data:any)=>{\n        if(data.success){\n          this.authEmail = data.user.username;\n          this.userType = data.user.type;\n          console.log(this.userType);\n        }\n        return data;\n      }));\n  }\n  isAdmin(){\n    if(localStorage.getItem('type') === 'admin'){\n      return true;\n    }else{\n      return false;\n    }\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsformService {\n  email;\n  name;\n  address;\n  mobile;\n  operation;\n  goBackLink;\n  detailsFlag;\n  emailFlag;\n  confirmFlag;\n  constructor() { }\n\n  onClick(){\n  }\n  clearFields(){\n    this.email = \"\";\n    this.name = \"\";\n    this.address = \"\";\n    this.mobile = \"\";\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">  \\n    <div class=\\\"col-0 col-md-2\\\"></div>\\n    <div class=\\\"col-12 col-md-8\\\">\\n      <form name=\\\"form\\\" id=\\\"checkoutForm\\\">\\t\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n          <input [disabled]=\\\"detailsFormService.emailFlag\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"*Enter email\\\" [(ngModel)]=\\\"detailsFormService.email\\\" name=\\\"email\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Full Name</label>\\n          <input [disabled]=\\\"detailsFormService.detailsFlag\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*Enter Name\\\" name=\\\"name\\\" [(ngModel)]=\\\"detailsFormService.name\\\" name=\\\"name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"address\\\">Address</label>\\n          <input [disabled]=\\\"detailsFormService.detailsFlag\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*Enter Address\\\" [(ngModel)]=\\\"detailsFormService.address\\\" name=\\\"address\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobile\\\">Mobile Number</label>\\n          <input [disabled]=\\\"detailsFormService.detailsFlag\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*Enter Mobile Number\\\" [(ngModel)]=\\\"detailsFormService.mobile\\\" name=\\\"mobile\\\">\\n        </div>\\n        <button [disabled]=\\\"!detailsFormService.email ||\\n        !detailsFormService.name ||\\n        !detailsFormService.address ||\\n        !detailsFormService.mobile\\\"         \\n        type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"detailsFormService.onClick()\\\">{{detailsFormService.operation}}</button>\\n        <a routerLink=\\\"{{detailsFormService.goBackLink}}\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\n          Back\\n        </button></a>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"footer-info\\\">\\n\\t\\t<br><br>\\n\\t\\t<p class=\\\"text-right col-form-label-sm\\\">This is a simple form, no validation included except mandatory fields :(</p>\\n\\t</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsformService } from '../detailsform.service';\n\n\n@Component({\n  selector: 'app-detailsform',\n  templateUrl: './detailsform.component.html',\n  styleUrls: ['./detailsform.component.css']\n})\n// export class DetailsformComponent implements OnInit {\nexport class DetailsformComponent implements OnInit {\n  constructor(\n    private detailsFormService: DetailsformService\n    ) { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DetailsformComponent } from './detailsform/detailsform.component';\nimport { DetailsformService } from './detailsform.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule\n    // CheckoutComponent\n  ],\n  declarations: [DetailsformComponent],\n  exports: [\n  \tDetailsformComponent, FormsModule ],\n  providers: [DetailsformService]\n//   \t, FormsModule, ReactiveFormsModule,]\n})\nexport class SharedFormModule {\n }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}